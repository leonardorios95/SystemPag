@inject SignInManager<IdentityUser> SignInManager

@{
    // Verifica se o usuário tem contas de login externas vinculadas
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills flex-column">
    <!-- Item de navegação "Perfil" -->
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Perfil</a>
    </li>

    <!-- Item de navegação "Email" -->
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a>
    </li>

    <!-- Item de navegação "Senha" -->
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Senha</a>
    </li>

    <!-- Verifica se o usuário possui contas de login externas e, se sim, exibe o item "External logins" -->
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item">
            <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a>
        </li>
    }

    <!-- Item de navegação "Ajuda e suporte" -->
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Ajuda e suporte</a>
    </li>
</ul>
